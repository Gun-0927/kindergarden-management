/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-24 01:43:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.blueAlbum;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import utils.AlertFunc;

public final class Layout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("utils.AlertFunc");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link href=\"Layout.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 if(session.getAttribute("id")==null) { //로그인 상태 확인, 로그아웃 된 상태 
      out.write(" \r\n");
      out.write("		");
AlertFunc.alertLocation("로그인을 해주세요.", "../Login/LoginForm.jsp", out); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 } else { //로그인 된 상태
      out.write("\r\n");
      out.write("    <img src=\"sun.jpg\" alt=\"image\" style=\"width: 200px; height: 150px; border-radius: 20px\" onclick=\"location.href='Enterance.jsp';\">\r\n");
      out.write("    <span class=\"user-info\">\r\n");
      out.write("	    <div class=\"user-name\">\r\n");
      out.write("	    	<br>\r\n");
      out.write("	    	<br>\r\n");
      out.write("	    	");
      out.print(session.getAttribute("name") );
      out.write(" 회원님, 환영합니다.\r\n");
      out.write("	    	<br>\r\n");
      out.write("	        <button>개인정보 수정</button>\r\n");
      out.write("	        <button onclick=\"location.href='../login/Logout.do';\">로그아웃</button>\r\n");
      out.write("	    </div>\r\n");
      out.write("    </span>\r\n");
      out.write("	<header class=\"logo\">\r\n");
      out.write("            <span style=\"font-size: 4em;\">원생 관리 시스템</span>\r\n");
      out.write("            <a href=\"Enterance.jsp\"></a>\r\n");
      out.write("    </header>\r\n");
      out.write("    <aside class=\"sidebar\" style=\"display: inline-block; width: 200px;\">\r\n");
      out.write("        <h2>카테고리</h2>\r\n");
      out.write("        <a href=\"../Board/Enterance.jsp\" class=\"category-link ");
      out.print( (request.getRequestURI().endsWith("Enterance.jsp")) ? "active" : "" );
      out.write("\">홈</a>\r\n");
      out.write("        <a href=\"../Board/List.jsp\" class=\"category-link ");
      out.print( (request.getRequestURI().endsWith("List.jsp")) ? "active" : "" );
      out.write("\">공지사항</a>\r\n");
      out.write("        <a href=\"../Board/List2.jsp\" class=\"category-link ");
      out.print( (request.getRequestURI().endsWith("List2.jsp")) ? "active" : "" );
      out.write("\">알림장</a>\r\n");
      out.write("        <a href=\"List.jsp\" class=\"category-link ");
      out.print( (request.getRequestURI().endsWith("../blueAlbum/List.jsp")) ? "active" : "" );
      out.write("\">앨범</a>\r\n");
      out.write("        <a href=\"Calendar.jsp\" class=\"category-link ");
      out.print( (request.getRequestURI().endsWith("Calendar.jsp")) ? "active" : "" );
      out.write("\">일정표</a>\r\n");
      out.write("        <a href=\"../Board/List3.jsp\" class=\"category-link ");
      out.print( (request.getRequestURI().endsWith("List3.jsp")) ? "active" : "" );
      out.write("\">반정보</a>\r\n");
      out.write("    </aside>\r\n");
      out.write("	");
	}
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
